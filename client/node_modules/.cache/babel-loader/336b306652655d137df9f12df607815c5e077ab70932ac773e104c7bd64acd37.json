{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vales\\\\Documents\\\\coding\\\\MERN Stack\\\\mern-todo-auth\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuthContext } from '../context/authContext';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const response = await fetch('http://localhost:4000/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const user = await response.json();\n    if (!response.ok) {\n      setError(user.error);\n      setLoading(false);\n    }\n    if (response.ok) {\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN',\n        payload: user\n      });\n      setLoading(false);\n      setEmail('');\n      setPassword('');\n      setError('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Email\",\n      variant: \"outlined\",\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Password\",\n      variant: \"outlined\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      disabled: loading,\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"xywuDqlVXlUS2wEreLvlo1WT5EA=\", false, function () {\n  return [useAuthContext];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuthContext","Box","TextField","Button","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","dispatch","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","user","json","ok","localStorage","setItem","type","payload","onSubmit","children","id","label","variant","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vales/Documents/coding/MERN Stack/mern-todo-auth/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuthContext } from '../context/authContext';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { dispatch } = useAuthContext();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const response = await fetch('http://localhost:4000/api/user/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const user = await response.json();\r\n    if (!response.ok) {\r\n      setError(user.error);\r\n      setLoading(false);\r\n    }\r\n    if (response.ok) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      dispatch({ type: 'LOGIN', payload: user });\r\n      setLoading(false);\r\n      setEmail('');\r\n      setPassword('');\r\n      setError('');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        id='outlined-basic'\r\n        label='Email'\r\n        variant='outlined'\r\n        type='email'\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <TextField\r\n        id='outlined-basic'\r\n        label='Password'\r\n        variant='outlined'\r\n        type='password'\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <Button variant='contained' disabled={loading} type='submit'>\r\n        Login\r\n      </Button>\r\n      {error && <div>{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}